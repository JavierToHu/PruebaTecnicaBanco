@model Negocio.Persona

@{
    ViewBag.Title = "GetAllPersonaView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title></title>
</head>
<body>
    <div class="container" id="divTablePersona">
        <div class="row">
            <div class="col-lg-12">
                <h1 class="fw-bold">Lista de Personas</h1>
            </div>
        </div>

        <div class="row" style="margin-bottom: 20px;">
            <div class="col-lg-6">
                <a class="btn btn-success" href="@Url.Action("FormsPersona", "Persona")">Agregar Persona</a>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <table id="tablePersona" class="table table-bordered table-hover">
                    <thead class="table-primary">
                        <tr class="text-center">
                            <th>#</th>
                            <th>Nombre</th>
                            <th>ApellidoPaterno</th>
                            <th>ApellidoMaterno</th>
                            <th>Alta de Cuenta</th>
                            <th>Opciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Negocio.Persona personaItem in Model.Personas)
                        {
                            <tr class="align-middle text-center">
                                <td class="idPersonalbl">@personaItem.IdPersona</td>
                                <td>@personaItem.Nombre</td>
                                <td>@personaItem.ApellidoPaterno</td>
                                <td>@personaItem.ApellidoMaterno</td>
                                <td><a type="button" class="btn btn-primary btn-sm">Cuentas</a></td>
                                <td>
                                    <div class="btn-group">
                                        <a type="button" href="@Url.Action("FormsPersona","Persona", new { IdPersona = personaItem.IdPersona })" class="btn btn-warning btn-sm">Modificar</a>
                                        <a type="button" href="@Url.Action("DeletePersona","Persona", new { IdPersona = personaItem.IdPersona })" class="btn btn-danger btn-sm">Eliminar</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="container" id="divTableCuenta">
        <div class="row">
            <div class="col-lg-12">
                <h1 class="fw-bold">Cuentas del usuario</h1>
            </div>
            <div class="col-lg-4">
                <button type="button" onclick="GetTipoBancos()" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                    Agregar cuenta
                </button>
                <a class="btn btn-danger" href="@Url.Action("GetAllPersonaView", "Persona")">Regresar</a>

            </div>
        </div>

        <div class="row">
            <div class="col-12 d-flex justify-content-center" id="divTablaCuentaError">
                <div class="table-responsive">
                    <table id="tableCuentas" class="table table-bordered table-hover">
                        <thead class="table-primary">
                            <tr class="align-middle text-center">
                                <th>#</th>
                                <th>Numero Cuenta</th>
                                <th>Banco</th>
                                <th>Eliminar</th>
                                <th>Actualizar</th>
                            </tr>
                        </thead>
                        <tbody id="table_body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5 fw-bold" id="staticBackdropLabel">Formulario de Alta o Actualizar Cuentas</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modalBody">
                    <form id="formAltaCuenta">
                        <div class="row">
                            <div class="col-6">
                                <div class="col-form-label">
                                    <label class="fw-bold">IdPersona</label>
                                    <input id="inputIdPersona" class="form-control" disabled />
                                </div>
                                <div class="col-form-label">
                                    <label class="fw-bold">Numero Cuenta</label> cct
                                    <input id="inputNumeroCuenta" class="form-control" />
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="col-form-label">
                                    <label class="fw-bold">Tipo de Banco</label>
                                    <select class="form-select" id="ddlIdTipoEstado">
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-success" onclick="AddPersonaCuenta()" id="btnSumbit">Confirmar</button>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <script>
        alert("@TempData["SuccessMessage"]");
        </script>
    }

    @Scripts.Render("~/bundles/jquery")

    <script>
    $(document).ready(function () {
        $('#tablePersona tbody').on('click', 'tr', function () {
            var data = $("#tablePersona").DataTable().row(this).data();
        });

        $("#tablePersona tbody tr").click(function () {
            console.log($(this).text());
            var idpersonalbl = $(this).find(".idPersonalbl").html();
            $("#divTablePersona").hide();
            $("#divTableCuenta").show();
            GetAllCuentas(idpersonalbl);
        });

        $(document).on('click', '#btnDelete', function () {
            var $IdAltaCuenta = $(this).data('id');
            if (confirm("¿Estás seguro de que deseas eliminar esta cuenta?")) {
                DeleteCuenta($IdAltaCuenta);
            }
        });

        //$(document).on('click', '#btnDelete', function () {
        //    var $IdAltaCuenta = $(this).data('id');
        //    if (confirm("¿Estás seguro de que deseas eliminar esta cuenta?")) {
        //        DeleteCuenta($IdAltaCuenta);
        //    }
        //});



    });


        //function FillData()
        //{

        //}

        function GetTipoBancos() {
            $.ajax({
            url: '@Url.Action("GetTiposBancos", "AltaCuenta")',
                type: 'GET',
                datatype: 'JSON',
                success: function (result) {
                    var ddlTipoBanco = $('#ddlIdTipoEstado');
                    ddlTipoBanco.empty(); // Vaciar cualquier opción existente
                    $.each(result, function (index, estado) {
                        console.log(estado);
                        ddlTipoBanco.append($('<option></option>').attr('value', estado.IdTipoBanco).text(estado.NombreTipoBanco));
                    });
                },
                error: function () { }
            });
        }


    function DeleteCuenta(IdAltaCuenta) {
        $.ajax({
            url: '@Url.Action("DeleteCuenta", "AltaCuenta")',
            type: 'GET',
            datatype: 'JSON',
            data: { IdAltaCuenta: IdAltaCuenta },
            success: function (response) {
                if (response) {
                    alert("La cuenta con Id " + IdAltaCuenta + " fue eliminada");
                    GetAllCuentas($("#tablePersona").find(".idPersonalbl").html());
                } else {
                    alert("Hubo un error al eliminar la cuenta.");
                }
            },
            error: function () {
                alert("Ocurrió un error durante la solicitud.");
            }
        });
    }

    function GetAllCuentas(idPersona) {
        var $tbody = $('#inputIdPersona');
        $('#inputIdPersona').val(idPersona);
        $.ajax({
            url: '@Url.Action("GetAllCuentaByIdPersona", "AltaCuenta")',
            type: 'GET',
            datatype: 'JSON',
            data: { IdPersona: idPersona },
            success: function (result) {
                var $tbody = $('#table_body');
                var $tablaCuentas = $('#tableCuentas');

                $tablaCuentas.show();
                $tbody.empty();

                $.each(result, function (index, cuenta) {
                    var $row = '<tr>' +
                        '<td id="idAltaCuenta">' + cuenta.IdAltaCuenta + '</td>' +
                        '<td>' + cuenta.NumeroCuenta + '</td>' +
                        '<td>' + cuenta.TipoBanco.NombreTipoBanco + '</td>' +
                        '<td>' + '<button id="btnDelete" class="btn btn-danger" data-id="' + cuenta.IdAltaCuenta + '">Eliminar</button>' + '</td>' +
                        '<td>' + '<button id="btnUpdate" class="btn btn-warning" data-id="' + cuenta.IdAltaCuenta + '" style="margin-left: 2px;">Editar</button>' + '</td>' +
                        '</tr>';
                    $tbody.append($row);
                });
            },
            error: function (result) {
                var $tbody = $('#divTablaCuentaError');
                var $tablaCuentas = $('#tableCuentas');

                $tablaCuentas.hide();
                var row = '<div class="alert alert-danger" role="alert">' + 'No existen cuentas asociadas a esta persona. Por favor de agregar una nueva cuenta' + '</div>';
                $tbody.append(row);


            //    divTablaCuentaError
                //alert("Ocurrió un error al obtener las cuentas.");
            }
        });
    }

    function limpiarInputs()
    {
        $('#inputIdPersona').val('')
        $('#inputNumeroCuenta').val(''),    
        $('#ddlIdTipoEstado').val()

    }
    function AddPersonaCuenta() {

        var modeloPersonaCuentaAdd = {
            Persona:
            {
                IdPersona: $('#inputIdPersona').val()
            },
            NumeroCuenta: $('#inputNumeroCuenta').val(),
            TipoBanco:
            {
                IdTipoBanco: $('#ddlIdTipoEstado').val()
            }
        };

        $.ajax({
            url: '@Url.Action("AddCuenta", "AltaCuenta")',
            type: 'POST',
            ContentType: 'application/json; charset=utf-8',
            dataType: 'JSON',
            data: modeloPersonaCuentaAdd,
            success: function (result) {
                window.alert("Registro Exitoso", result);
                $('#staticBackdrop').modal('hide');
                GetAllCuentas($('#inputIdPersona').val());
                limpiarInputs();
            },
            error: function (error) {
                window.alert("Registro Fallido");
            }
        });
    }
    </script>

</body>
</html>


